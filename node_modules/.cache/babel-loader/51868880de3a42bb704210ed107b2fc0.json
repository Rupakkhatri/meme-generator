{"ast":null,"code":"var _jsxFileName = \"/Users/rupakkhatri/Desktop/meme-generator/src/MemeGenerator.js\";\n//THis will hold data and call API so is class component\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topText\",\n          placeholder: \"Top Text\",\n          value: this.state.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"bottomText\",\n          placeholder: \"Bottom Text\",\n          value: this.state.Text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Gen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/rupakkhatri/Desktop/meme-generator/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","componentDidMount","fetch","then","response","json","memes","data","setState","render","Text"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAIA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,OAAO,EAAC,EADA;AAERC,MAAAA,UAAU,EAAE,EAFJ;AAGRC,MAAAA,SAAS,EAAE,+BAHH;AAIRC,MAAAA,WAAW,EAAC;AAJJ,KAAZ;AAMH;;AACLC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACd,YAAK;AAACE,QAAAA;AAAD,UAAUF,QAAQ,CAACG,IAAxB;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,WAAW,EAAEM;AAAd,OAAd;AACH,KALL;AAMH;;AAIGG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,gCACG;AACA,UAAA,IAAI,EAAE,MADN;AAEA,UAAA,IAAI,EAAC,SAFL;AAGA,UAAA,WAAW,EAAE,UAHb;AAIA,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC;AAJlB;AAAA;AAAA;AAAA;AAAA,gBADH,eASG;AACA,UAAA,IAAI,EAAE,MADN;AAEA,UAAA,IAAI,EAAC,YAFL;AAGA,UAAA,WAAW,EAAE,aAHb;AAIA,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWc;AAJlB;AAAA;AAAA;AAAA;AAAA,gBATH,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBH;;AA/CiC;;AAoDtC,eAAehB,aAAf","sourcesContent":["//THis will hold data and call API so is class component\nimport React, {Component} from \"react\"\n\n\n\nclass MemeGenerator extends Component {\n    constructor(){\n        super()\n        this.state ={\n            topText:\"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs:[]\n        }\n    }\ncomponentDidMount(){\n    fetch(\"https://api.imgflip.com/get_memes\")\n        .then(response => response.json())\n        .then(response => {\n            const{memes} = response.data\n            this.setState({allMemeImgs: memes})\n        })\n}\n\n\n\n    render (){\n        return(\n            <div>\n                <form className=\"meme-form\">\n                   <input \n                   type =\"text\"\n                   name=\"topText\"\n                   placeholder =\"Top Text\"\n                   value={this.state.topText}\n\n                   \n                   />\n                   <input \n                   type =\"text\"\n                   name=\"bottomText\"\n                   placeholder =\"Bottom Text\"\n                   value={this.state.Text}\n\n                   \n                   />\n\n                    <button>Gen</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n\n\n\nexport default MemeGenerator\n\n\n\n"]},"metadata":{},"sourceType":"module"}