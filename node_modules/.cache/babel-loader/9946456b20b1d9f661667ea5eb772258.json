{"ast":null,"code":"var _jsxFileName = \"/Users/rupakkhatri/Desktop/meme-generator/src/MemeGenerator.js\";\n//THis will hold data and call API so is class component\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topText\",\n          placeholder: \"Top Text\",\n          value: this.state.topText,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"bottomText\",\n          placeholder: \"Bottom Text\",\n          value: this.state.bottomText,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Gen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.randomImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"top\",\n          children: [\" \", this.state.topText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bottom\",\n          children: [\" \", this.state.bottomText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/rupakkhatri/Desktop/meme-generator/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","componentDidMount","fetch","then","response","json","memes","data","setState","event","name","value","target","handleSubmit","preventDefault","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAIA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,OAAO,EAAC,EADA;AAERC,MAAAA,UAAU,EAAE,EAFJ;AAGRC,MAAAA,SAAS,EAAE,+BAHH;AAIRC,MAAAA,WAAW,EAAC;AAJJ,KAAZ;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACLC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACd,YAAK;AAACE,QAAAA;AAAD,UAAUF,QAAQ,CAACG,IAAxB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,WAAW,EAAEQ;AAAd,OAAd;AACH,KALL;AAMH;;AACAP,EAAAA,YAAY,CAACU,KAAD,EAAO;AACf,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACA,SAAKJ,QAAL,CAAc;AAAC,OAACE,IAAD,GAAQC;AAAT,KAAd;AAGH;;AAEDE,EAAAA,YAAY,CAACJ,KAAD,EAAO;AACfA,IAAAA,KAAK,CAACK,cAAN;AACH;;AAGEC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAE,KAAKF,YAA3C;AAAA,gCACG;AACA,UAAA,IAAI,EAAE,MADN;AAEA,UAAA,IAAI,EAAC,SAFL;AAGA,UAAA,WAAW,EAAE,UAHb;AAIA,UAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,OAJlB;AAKA,UAAA,QAAQ,EAAG,KAAKI;AALhB;AAAA;AAAA;AAAA;AAAA,gBADH,eAUG;AACA,UAAA,IAAI,EAAE,MADN;AAEA,UAAA,IAAI,EAAC,YAFL;AAGA,UAAA,WAAW,EAAE,aAHb;AAIA,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,UAJlB;AAKA,UAAA,QAAQ,EAAG,KAAKG;AALhB;AAAA;AAAA;AAAA;AAAA,gBAVH,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAwBI;AAAK,QAAA,SAAS,EAAE,MAAhB;AAAA,gCACI;AAAK,UAAA,GAAG,EAAG,KAAKL,KAAL,CAAWG,SAAtB;AAAiC,UAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,KAAd;AAAA,0BAAsB,KAAKH,KAAL,CAAWC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA,0BAAyB,KAAKD,KAAL,CAAWE,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiCH;;AAjEiC;;AAsEtC,eAAeJ,aAAf","sourcesContent":["//THis will hold data and call API so is class component\nimport React, {Component} from \"react\"\n\n\n\nclass MemeGenerator extends Component {\n    constructor(){\n        super()\n        this.state ={\n            topText:\"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs:[]\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\ncomponentDidMount(){\n    fetch(\"https://api.imgflip.com/get_memes\")\n        .then(response => response.json())\n        .then(response => {\n            const{memes} = response.data\n            this.setState({allMemeImgs: memes})\n        })\n}\n handleChange(event){\n     const {name, value} = event.target\n     this.setState({[name]: value})\n     \n\n }\n\n handleSubmit(event){\n     event.preventDefault\n }\n\n\n    render (){\n        return(\n            <div>\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n                   <input \n                   type =\"text\"\n                   name=\"topText\"\n                   placeholder =\"Top Text\"\n                   value={this.state.topText}\n                   onChange ={this.handleChange}\n\n                   \n                   />\n                   <input \n                   type =\"text\"\n                   name=\"bottomText\"\n                   placeholder =\"Bottom Text\"\n                   value={this.state.bottomText}\n                   onChange ={this.handleChange}\n\n                   \n                   />\n\n                    <button>Gen</button>\n\n                </form>\n                <div className =\"meme\">\n                    <img src ={this.state.randomImg} alt=\"\" />\n                    <h2 className=\"top\"> {this.state.topText}</h2>\n                    <h2 className=\"bottom\"> {this.state.bottomText}</h2>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default MemeGenerator\n\n\n\n"]},"metadata":{},"sourceType":"module"}